Acceleratiestructuren zoals kd-bomen waarin geometrische primitieven worden ondergebracht, hebben tot doel de kost voor het volgen van stralen te verminderen, wat cruciaal is voor de renderingperformantie. Photonmappen zoals kd-bomen waarin photons worden ondergebracht, hebben tot doel de kost voor het uitvoeren van k-nearest neighbor query's te verminderen, wat cruciaal is voor de performantie van het photonmapping lichttransportalgoritme (Jensen 1996, 2001) en zijn varianten. We introduceren drie hybride kd-bomen waarin zowel de geometrische primitieven als photons worden ondergebracht met als doel de gecombineerde kost van ray tracing en k-nearest neighbor query's fundamenteel te verminderen:
* De Hybrid Additive Photon Map (HAPM) voegt de photons toe aan de kd-boom acceleratiestructuur en gebruikt hiervoor de opdeling van de geometrische primitieven om de photons op te delen.
* De Hybrid Swapping Photon Map (HSPM) veralgemeent het idee achter de HAPM door een hybride kd-boom te bouwen op basis van de geometrische primitieven én photons met behulp van de door ons geïntroduceerde Hybrid Heuristic (HH) bouwheuristiek die zowel de kost van de ray tracing als k-nearest neighbor query's in rekening neemt en aan elkaar koppelt. Een k-nearest neighbor query kan namelijk enkel starten vanuit een hitpunt van een straal met een geometrisch primitief.
* De Hybrid Connected Photon Map (HCPM) behoudt de aparte kd-boom acceleratiestructuur en kd-boom photonmap, elk bekomen met een optimale bouwheuristiek voor hun specifieke data en verbindt deze kd-bomen door middel van ropes.

Onze HH kapselt zowel de Ray Termination Surface Area Heuristic (RTSAH) voor het bouwen van kd-boom acceleratiestructuren als de Voxel Volume Heuristic (VVH) (Wald et al. 2004) voor het bouwen van kd-boom photonmappen in. De de-facto standaard voor het bouwen van kd-boom acceleratiestructuren, de Surface Area Heuristic (SAH) (MacDonald & Booth 1990), neemt geen straalterminatie in rekening, maar veronderstelt dat stralen nooit een geometrische primitief raken en is bijgevolg onbruikbaar in de HH. 

De RTSAH (Ize et al. 2011) is een kostmetriek origineel gebruikt voor het bepalen van de doorloopvolgorde van de voxels voor occlusiestralen door straalterminatie in rekening te nemen. We passen deze RTSAH aan om kd-boom acceleratiestructuren te bouwen. Onze bouwprocedures, op basis van de orthogonale geprojecteerde en gemiddelde geprojecteerde oppervlakten van de geometrische primitieven op het splitsingsvlak, hebben dezelfde totale computationele complexiteit en beschouwen dezelfde eindige verzameling van splitsingsvlakken als de SAH. Door straalterminatie in rekening te nemen, moedigen we het splitsen van kindvoxels aan die niet of nauwelijks zichtbaar zijn ten opzichte van elkaar. Dit resulteert in fundamenteel verschillende en meer kwalitatieve kd-bomen in vergelijking met de SAH. We behalen reducties in intersectietesten tot 47% voor primaire stralen en tot 41% voor schaduwstralen (wanneer de voxels van voor naar achter doorlopen worden) in vergelijking met de SAH.

De HAPM en HSPM resulteren algemeen in aanzienlijke toenamen van de totale rendertijd ten opzichte van een niet-hybride photonmap. In eerste instantie werken de geometrische primitieven (niet-pundata) en photons (puntdata) elkaar tegen wat de mate van verfijning van de kd-boom betreft. In tweede instantie zijn het volgen van stralen en het uitvoeren van k-nearest neighbor query's fundamenteel verschillende operaties. Dit heeft zowel gevolgen voor de manier waarop de hybride kd-boom doorlopen wordt als voor de informatie die nodig is om de kostfuncties te evalueren. Enkel de HCPM resulteert gemiddeld in reducties tot minder dan 1% in totale rendertijd.

Uit onze resultaten en argumentatie concluderen we dat geometrische primitieven en photons niet verzoend kunnen worden noch in kd-bomen noch in de veel gebruikte huidige acceleratiestructuren (reguliere roosters, BVHs, BSPs, octrees) opdat de gecombineerde kost van de ray tracing en k-nearest neighbor query's fundamenteel verminderd wordt ten opzichte van twee aparte datastructuren.